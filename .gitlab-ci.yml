stages:
  - test
  - build
  - staging
  - test_e2e
  - production

.docker-build: &docker-build
  tags:
    - build
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_CREDENTIALS" > ~/.docker/config.json
  script:
    - export DOCKER_TAG="$CI_COMMIT_SHA"
    - docker-compose build "$DOCKER_SERVICE"
    - docker-compose push "$DOCKER_SERVICE"

.docker-build-staging: &docker-build-staging
  <<: *docker-build
  stage: build
  environment:
    name: staging
  only:
    - develop
  except:
    - merge_requests
  when: manual
  allow_failure: false


.docker-deploy: &docker-deploy
  tags:
    - deploy
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_CREDENTIALS" > ~/.docker/config.json
  script:
    - export DOCKER_TAG="$CI_COMMIT_SHA"
    - docker-compose up -d --quiet-pull

Build staging backend:
  <<: *docker-build-staging
  variables:
    DOCKER_SERVICE: "$DOCKER_REGISTRY/byot/backend-main"

Build staging frontend web app:
  <<: *docker-build-staging
  variables:
    DOCKER_SERVICE: "$DOCKER_REGISTRY/byot/frontend-web-app"

Build production backend:
  <<: *docker-build
  variables:
    DOCKER_SERVICE: "$DOCKER_REGISTRY/byot/backend-main"
  stage: build
  environment:
    name: production
  only:
    - master
  except:
    - merge_requests

Build production frontend web app:
  <<: *docker-build
  variables:
    DOCKER_SERVICE: "$DOCKER_REGISTRY/byot/frontend-web-app"
  stage: build
  environment:
    name: production
  only:
    - master
  except:
    - merge_requests

Deploy to staging:
  <<: *docker-deploy
  dependencies:
    - Build staging backend
    - Build staging frontend web app
  stage: staging
  environment:
    name: staging
  only:
    - develop
  except:
    - merge_requests

Deploy to production:
  <<: *docker-deploy
  dependencies:
    - Build production backend
    - Build production frontend web app
  stage: production
  environment:
    name: production
  only:
    - master
  except:
    - merge_requests
  when: manual

Unit tests:
  tags:
    - test
  image: node:14
  stage: test
  cache:
    paths:
      - ~/.yarn
      - node_modules
      - backend/main/node_modules
      - frontend/node_modules
      - frontend/web/node_modules
      - frontend/web/common/node_modules
      - frontend/web/app/node_modules
      - frontend/web/admin/node_modules
      - frontend/web/landing/node_modules
      - frontend/web/test/node_modules
      - frontend/web/storybook/node_modules
  before_script:
    - cd frontend
    - yarn --frozen-lockfile
    - cd ../backend/main
    - yarn --frozen-lockfile
    - cd ../..
  script:
    # add coverage to tests?
    - cd backend/main
    - yarn test
    - cd ../../frontend/common
    - yarn test
    - cd ../native/app
    - yarn test
    - cd ../../web/common
    - yarn test
    - cd ../app
    - yarn test
  only:
    - merge_requests

E2E tests:
  tags:
    - test
  image: node:14
  stage: test_e2e
  cache:
    paths:
      - ~/.yarn
      - node_modules
      - backend/main/node_modules
      - frontend/node_modules
      - frontend/web/node_modules
      - frontend/web/common/node_modules
      - frontend/web/app/node_modules
      - frontend/web/admin/node_modules
      - frontend/web/landing/node_modules
      - frontend/web/test/node_modules
      - frontend/web/storybook/node_modules
  before_script:
    - cd frontend/web/test
    - yarn --frozen-lockfile
    - cd ../../../backend
    - yarn --frozen-lockfile
    - cd ..
  script:
    - cd backend/main
    - yarn test:e2e
    - cd ../../frontend/web/test
    - yarn test
  only:
    - merge_requests && master
