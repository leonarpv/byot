image: node:13

cache:
  paths:
    - scripts/node_modules
    - scripts/yarn.lock
    - frontend/node_modules
    - frontend/yarn.lock
    - frontend/web/**/node_modules
    - frontend/web/**/yarn.lock

stages:
  - prebuild
  - build
  - test
  - deploy

before_script:
  - cd frontend
  - yarn install

Create favicon:
  stage: prebuild
  cache:
    paths:
      - scripts/node_modules
  artifacts:
    paths:
      - scripts/out
  before_script:
    - apt-get update
    - apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
      libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
      libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
      libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
      fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \
      fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
  script:
    - cd scripts
    - yarn install
    - yarn logo:favicon:generate

Build project:
  stage: build
  dependencies:
    - Create favicon
  artifacts:
    paths:
      - frontend/web/admin/build
      - frontend/web/app/build
      - frontend/web/landing/build
  script:
    - cd ../scripts
    - yarn install
    - yarn logo:favicon:inject frontend/web/admin
    - yarn logo:favicon:inject frontend/web/app
    - yarn logo:favicon:inject frontend/web/landing
    - cd ../frontend/web/common
    - cd ../admin
    - yarn build
    - cd ../app
    - yarn build
    - cd ../landing
    - yarn build

Build storybook:
  stage: build
  dependencies:
    - Create favicon
  artifacts:
    paths:
      - frontend/web/storybook/storybook-static
  before_script:
    - cd frontend/web/storybook
    - yarn install
  script:
    - yarn build-storybook

Unit tests:
  stage: test
  cache:
    paths:
      - ./frontend/**/__snapshots__
  dependencies:
    - Build project
  script:
    - cd web/common
    - cd ../common
    - yarn test
    - cd ../admin
    - yarn test
    - cd ../app
    - yarn test
    - cd ../landing
    - yarn test

Regression test:
  cache:
    paths:
      - .loki
  artifacts:
    paths:
      - frontend/web/storybook/.loki/**
  stage: test
  dependencies:
    - Build storybook
  before_script:
    - apt-get update
    - apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
      libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
      libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
      libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
      fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \
      fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    - cd frontend/web/storybook
    - yarn install
  script:
    - yarn test:ci

Deploy:
  stage: deploy
  dependencies:
    - Build project
    - Unit tests
    - Regression test
  script:
    - echo "Deploying"

