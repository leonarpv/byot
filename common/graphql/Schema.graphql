type Query {
    allUsers(filter: FulltextFilter): UserList! @restrictedForRole(role: ADMIN)
    allMedia(filter: FulltextFilterForUser): MediaList! @restrictedForRole(role: ADMIN)
    allTrainings(filter: FulltextFilterForUser): TrainingList! @restrictedForRole(role: ADMIN)
    allTrainingSets(filter: FulltextFilterForUser): TrainingSetList! @restrictedForRole(role: ADMIN)

    user(id: ID!): User! @restrictedForOwnerOrRole(role: ADMIN)
    trainingSets(pagination: Pagination): TrainingSetList! @auth
    trainingSet(id: ID!): TrainingSet! @restrictedForOwnerOrRole(role: ADMIN)
    training(id: ID!): TrainingSet! @restrictedForOwnerOrRole(role: ADMIN)
    video(id: ID!): Media! @restrictedForOwnerOrRole(role: ADMIN)

    trainingDraft: Training @auth
    findMedia(filter: MediaFilter): MediaList! @auth
}

type Mutation {
    userRegister(user: UserRegister!): Auth!
    userLogin(user: UserLogin!): Auth!
    userUpdateMyself(user: UserUpdateInput!): Auth! @auth
    userUpdate(id: ID!, user: UserUpdateInput!): User! @restrictedForOwnerOrRole(role: ADMIN)

    trainingDraftUpdateOrCreate(draft: TrainingDraftInput!): TrainingDraft! @auth
    saveTrainingDraft(draft: TrainingDraftInput!): Training! @auth
    updateTraining(training: TrainingUpdateInput!): Training! @restrictedForOwnerOrRole(role: ADMIN)
    removeMedia(id: ID!): Training! @restrictedForOwnerOrRole(role: ADMIN)
    removeTraining(id: ID!): Training! @restrictedForOwnerOrRole(role: ADMIN)
    removeTrainingSet(id: ID!): Training! @restrictedForOwnerOrRole(role: ADMIN)
}

type Subscription {
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
