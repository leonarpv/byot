type Training implements Entity {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime

    label: String!
    media(filter: FulltextFilter): MediaList!
    trainingSet: TrainingSet!
    owner: User!
}

input TrainingUpdateInput {
    label: String!
    media: [SourceInput!]!
}

type TrainingSet implements Entity {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime

    label: String!
    trainings(pagination: FulltextFilter): TrainingList!
    owner: User!
}

input TrainingSetInput {
    label: String!
}

type TrainingSetList implements List {
    meta: ListMeta!
    entries: [TrainingSet!]!
}

type TrainingList implements List {
    meta: ListMeta!
    entries: [Training!]!
}


input TrainingDraftInput {
    label: String
    idTrainingSet: ID
    media: [SourceInput!]
}

type TrainingDraft {
    label: String
    idTrainingSet: ID
    media: [Media!]
}

interface TrainingQuery {
    allTrainings(filter: FulltextFilterForUser): TrainingList!
    allTrainingSets(filter: FulltextFilterForUser): TrainingSetList!
    trainingSets(pagination: Pagination): TrainingSetList!
    trainingSet(id: ID!): TrainingSet!
    training(id: ID!): TrainingSet!
    trainingDraft: Training
}

interface TrainingMutation {
    trainingDraftUpdateOrCreate(draft: TrainingDraftInput!): TrainingDraft!
    saveTrainingDraft(draft: TrainingDraftInput!): Training!
    updateTraining(training: TrainingUpdateInput!): Training!
    removeTraining(id: ID!): Training!
    removeTrainingSet(id: ID!): Training!
}
