type Query {
    # only for admin
    allUsers(filter: FulltextFilter): UserList!

    # only for admin or myself
    allMedia(filter: FulltextFilter): MediaList!
    allTrainings(filter: FulltextFilter): TrainingList!
    allTrainingSets(filter: FulltextFilterForUser): TrainingSetList!

    user(id: ID!): User!
    me: User!
    trainingSets(pagination: Pagination): TrainingSetList!
    trainingSet(id: ID!): TrainingSet!
    training(id: ID!): TrainingSet!
    media(id: ID!): Media!

    findMedia(filter: MediaFilter): MediaList!
}

type Mutation {
    userRegister(user: UserRegister!): Auth!
    userLogin(user: UserLogin!): Auth!
    userUpdateMyself(user: UserUpdateInput!): User!
    userUpdate(id: ID!, user: UserUpdateInput!): User!

    createTraining(draft: TrainingDraftInput): Training!
    updateTraining(training: TrainingUpdateInput!): Training!
    removeMediaFromTraining(id: ID!): Media!
    removeTrainingFromTrainingSet(id: ID!): Training!
    removeTrainingSet(id: ID!): TrainingSet!
}

# WARN! there is no way to make TS interface with methods so these methods need to be tested
schema {
    query: Query
    mutation: Mutation
}
