enum Role {
    USER
    ADMIN
}

type User implements Entity {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime

    role: Role!
    lastLogin: DateTime

    firstName: String
    lastName: String
    fullName: String
    userName: String!
    email: String!

    emailValidated: Boolean
}

type Auth {
    token: String!
    user: User
}

input UserRegister {
    firstName: String
    lastName: String
    email: String!
    password: String!
    userName: String
}

input UserLogin {
    userNameOrEmail: String!
    password: String!
}

input UserUpdateInput {
    role: Role
    firstName: String
    lastName: String
    email: String
    password: String
    passwordRepeat: String
    userName: String
}

type UserList implements List {
    meta: ListMeta!
    entries: [User!]!
}

enum TokenType {
    EMAIL_CONFIRMATION
    PASSWORD_RESET
}

type Token implements Entity {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime
    token: String!
    validUntil: DateTime
    valid: Boolean!
    tokenType: TokenType!
}

type TokenList implements List {
    meta: ListMeta!
    entries: [Token!]!
}

enum AuthName {
    USER_NAME
    EMAIL
}

input AuthNameCheck {
    name: String!
    type: AuthName!
}

type AuthNameCheckResult {
    available: Boolean!
}

input ResetPassword {
    token: String!
    newPassword: String!
    passwordRepeat: String!
}
